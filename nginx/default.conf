server {
    listen 80;
    server_name locked.lureclo.com;

    access_log /var/log/nginx/lure-access.log;
    error_log /var/log/nginx/lure-error.log debug;

    # Health check for load balancer
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API routes with exact matching for better specificity
    location ~* ^/api(/.*)?$ {
        # Add debug headers
        add_header X-Debug-Location "api-route" always;
        
        proxy_pass http://api:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        
        # Timeouts and buffering
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_buffering off;
        
        # HTTP version and connection settings
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 = @api_fallback;
    }

    # Fallback for API errors
    location @api_fallback {
        add_header Content-Type application/json always;
        return 503 '{"error": "API service temporarily unavailable"}';
    }

    # Frontend routes
    location / {
        # Add debug headers
        add_header X-Debug-Location "frontend-route" always;
        
        proxy_pass http://app:5173;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Headers para suportar Vite HMR (Hot Module Replacement)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }


}