services:
  proxy:
    container_name: lure_proxy_srvr
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8088:80"
    networks:
      - lure-net
    depends_on:
      - api
      - app

  api:
    container_name: lure_api_srvr
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    command: gunicorn --bind 0.0.0.0:5000 --workers 5 app:application
    env_file:
      - ./.env
    ports: []
    networks:
      - lure-net
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./api:/api:Z
    environment:
      - PYTHONUNBUFFERED=1

  app:
    container_name: app-srvr
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    env_file:
      - ./.env
    ports: []
    networks:
      - lure-net
    volumes:
      - ./app:/home/vite
      - /home/vite/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_HOST=0.0.0.0
      - HOST=0.0.0.0
    healthcheck:
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  mysql:
    container_name: lure_mysql_srvr
    image: mysql:latest
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 20s
      retries: 10
      start_period: 30s
    env_file:
      - ./.env
    ports:
      - "60234:${MYSQL_PORT}"
    networks:
      - lure-net
    volumes:
      - mysql-data:/var/lib/mysql:Z

  redis:
    container_name: lure_redis_srvr
    image: redis:7.4-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    ports:
      - "60345:6379"
    networks:
      - lure-net
    volumes:
      - redis-data:/data

volumes:
  mysql-data:
  redis-data:

networks:
  lure-net:
    driver: bridge
