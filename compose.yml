services:
  api:
    container_name: api-srvr
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    env_file:
      - ./.env
    ports:
      - 8080:5000
    networks:
      - lure-net
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    volumes:
      - ./api:/api
      - /api/__pycache__
    environment:
      - NODE_ENV=development
      - FLASK_ENV=development
      - FLASK_DEBUG=1

  app:
    container_name: app-srvr
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    env_file:
      - ./.env
    ports:
      - 8081:5173
    networks:
      - lure-net
    volumes:
      - ./app:/home/vite
      - /home/vite/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

  mysql:
    container_name: mysql-srvr
    image: mysql:lts
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 20s
      retries: 10
      start_period: 30s
    env_file:
      - ./.env
    ports:
      - 8082:3306
    networks:
      - lure-net
    volumes:
      - ./db/mysql:/var/lib/mysql

  redis:
    container_name: redis-srvr
    image: redis:7.4-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    ports:
      - 8083:6379
    networks:
      - lure-net
    volumes:
      - ./db/redis:/data


volumes:
  mysql-data:
  redis-data:

networks:
  lure-net:
    driver: bridge
